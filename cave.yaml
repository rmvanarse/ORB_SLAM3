%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Camera calibration and distortion parameters (OpenCV) (equal for both cameras after stereo rectification)
Camera.fx: 1136.7477932812305
Camera.fy: 1136.7477932812305
Camera.cx: 760.8502960205078
Camera.cy: 610.0998077392578

Camera.k1: -0.17473019446863114
Camera.k2: 0.10643290428040156
Camera.p1: 0.005210777878907861
Camera.p2: -0.00028664918860079295

Camera.width: 1600
Camera.height: 1200

# Camera frames per second 
Camera.fps: 20.0

# stereo baseline times fx
Camera.bf: 160.604

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 35 # TUNE!

# Transformation from camera 0 to body-frame (imu)
Tbc: !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   data: [-0.9999514849243678, 0.007454284822327213, -0.00643905546937816, 0.09571982853264846,
         -0.007271683630496376, -0.9995834071126521, -0.027930894046524813, -0.002254291217617223,
        -0.006644577844233425, -0.027882716202835157, 0.9995891174489757, 0.024317486464850345,
         0.0, 0.0, 0.0, 1.0]

# IMU noise
IMU.NoiseGyro: 1.7e-04 # 1.6968e-04 
IMU.NoiseAcc: 2.0e-03 # 2.0000e-3
IMU.GyroWalk: 1.9393e-05 
IMU.AccWalk: 3.e-03 # 3.0000e-3
IMU.Frequency: 200

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.height: 1200
LEFT.width: 1600
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-0.17473019446863114, 0.10643290428040156, 0.005210777878907861, -0.00028664918860079295, 0.0]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1156.5188534683703, 0.0, 763.2083316463371, 0.0, 1156.5772666173266, 617.2779853849335, 0.0, 0.0, 1.0]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9999793557818297, -0.004380156721661268, 0.004701301654899955, 0.004372753517925784, 0.9999891851817647, 0.0015838390643426329, -0.004708188274500789, -0.0015632487338731646, 0.9999876945325716]
LEFT.Rf:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [0.9999793557818297, -0.004380156721661268, 0.004701301654899955, 0.004372753517925784, 0.9999891851817647, 0.0015838390643426329, -0.004708188274500789, -0.0015632487338731646, 0.9999876945325716]
LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [1136.7477932812305, 0.0, 760.8502960205078, 0.0, 0.0, 1136.7477932812305, 610.0998077392578, 0.0, 0.0, 0.0, 1.0, 0.0]

RIGHT.height: 1200
RIGHT.width: 1600
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-0.173831269260396, 0.10747272137157605, 0.004231076633773206, -0.0026692219494915187, 0.0]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [1158.625855755729, 0.0, 765.5609812846063, 0.0, 1156.0604864187183, 588.6683184401453, 0.0, 0.0, 1]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9999827311225199, -0.00583957782255556, -0.000660899084693029, 0.005838530629318984, 0.999981714531379, -0.001575488170164088, 0.000670087185621753, 0.0015716022837030203, 0.9999985405236477]
RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [1136.7477932812305, 0.0, 760.8502960205078, -157.93623397062217, 0.0, 1136.7477932812305, 610.0998077392578, 0.0, 0.0, 0.0, 1.0, 0.0]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500

